#!/usr/bin/env python3
"""
‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Auto Smart Trader
‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
"""
import subprocess
import sys
from datetime import datetime, timedelta

def get_current_status():
    """‡∏î‡∏∂‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô"""
    try:
        result = subprocess.run(
            [sys.executable, "check_balance.py"], 
            capture_output=True, 
            text=True, 
            timeout=30
        )
        
        if result.returncode == 0:
            return result.stdout
        else:
            return f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ: {result.stderr}"
    except Exception as e:
        return f"‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}"

def analyze_testing_results():
    """‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö"""
    print("üîç ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Auto Smart Trader")
    print("=" * 70)
    
    # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    status = get_current_status()
    print("üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:")
    print(status)
    print()
    
    # ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ
    lines = status.split('\n')
    
    # ‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
    spot_usdt = 0
    futures_balance = 0
    position_size = 0
    position_pnl = 0
    position_entry = 0
    position_mark = 0
    
    for line in lines:
        if "USDT:" in line and "Free:" in line:
            # Spot USDT
            parts = line.split()
            for i, part in enumerate(parts):
                if part == "USDT:" and i+1 < len(parts):
                    spot_usdt = float(parts[i+1])
                    break
        elif "Total Balance:" in line:
            # Futures balance
            parts = line.split()
            futures_balance = float(parts[2])
        elif "ASTERUSDT: SHORT" in line or "ASTERUSDT: LONG" in line:
            # Position info
            parts = line.split()
            position_size = float(parts[2])
            position_entry = float(parts[4])
        elif "Mark:" in line and "PNL:" in line:
            # Mark price and PnL
            parts = line.split()
            for i, part in enumerate(parts):
                if part == "Mark:" and i+1 < len(parts):
                    position_mark = float(parts[i+1].replace(',', ''))
                elif part == "PNL:" and i+1 < len(parts):
                    position_pnl = float(parts[i+1])
    
    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
    total_capital = spot_usdt + futures_balance
    position_value = position_size * position_mark
    roi_percentage = (position_pnl / total_capital) * 100
    
    print("üí∞ ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:")
    print("-" * 50)
    print(f"üíµ ‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô‡∏£‡∏ß‡∏°: {total_capital:.2f} USDT")
    print(f"üìä Position: {position_size:.2f} ASTER @ {position_entry:.4f}")
    print(f"üìà ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {position_mark:.4f} USDT")
    print(f"üí∞ PnL: {position_pnl:+.2f} USDT")
    print(f"üìä ROI: {roi_percentage:+.2f}%")
    print()
    
    # ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£
    analyze_stability(position_pnl, roi_percentage, position_value, total_capital)
    
    # ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    recommend_testing_duration(position_pnl, roi_percentage)
    
    # ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô
    recommend_capital_increase(position_pnl, roi_percentage, total_capital)

def analyze_stability(pnl, roi, position_value, total_capital):
    """‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö"""
    print("üéØ ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£:")
    print("-" * 40)
    
    # ‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô
    stability_score = 0
    max_score = 5
    
    # 1. ‡∏Å‡∏≥‡πÑ‡∏£/‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô
    if pnl > 0:
        print("‚úÖ ‡∏Å‡∏≥‡πÑ‡∏£: ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏Å‡∏≥‡πÑ‡∏£‡πÑ‡∏î‡πâ")
        stability_score += 1
    else:
        print("‚ùå ‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô: ‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á")
    
    # 2. ROI
    if roi > 0.5:  # ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0.5%
        print("‚úÖ ROI ‡∏î‡∏µ: ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0.5%")
        stability_score += 1
    elif roi > 0:
        print("‚ö†Ô∏è ROI ‡∏ï‡πà‡∏≥: ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0% ‡πÅ‡∏ï‡πà‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤ 0.5%")
        stability_score += 0.5
    else:
        print("‚ùå ROI ‡∏ï‡∏¥‡∏î‡∏•‡∏ö: ‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á")
    
    # 3. ‡∏Ç‡∏ô‡∏≤‡∏î Position
    position_ratio = position_value / total_capital
    if 0.1 <= position_ratio <= 0.3:  # 10-30% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô
        print("‚úÖ ‡∏Ç‡∏ô‡∏≤‡∏î Position ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°: 10-30% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô")
        stability_score += 1
    elif position_ratio < 0.1:
        print("‚ö†Ô∏è Position ‡πÄ‡∏•‡πá‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ: ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 10% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô")
        stability_score += 0.5
    else:
        print("‚ö†Ô∏è Position ‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ: ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 30% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô")
        stability_score += 0.5
    
    # 4. ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á
    if abs(pnl) < total_capital * 0.05:  # PnL ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô
        print("‚úÖ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≥: PnL ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô")
        stability_score += 1
    else:
        print("‚ö†Ô∏è ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á: PnL ‡πÄ‡∏Å‡∏¥‡∏ô 5% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô")
    
    # 5. ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£
    if pnl > 0 and roi > 0:
        print("‚úÖ ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏î‡∏µ: ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á")
        stability_score += 1
    
    # ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
    stability_percentage = (stability_score / max_score) * 100
    print(f"\nüìä ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£: {stability_score:.1f}/{max_score} ({stability_percentage:.1f}%)")
    
    if stability_percentage >= 80:
        print("üéâ ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏°‡∏≤‡∏Å - ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á")
    elif stability_percentage >= 60:
        print("‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏î‡∏µ - ‡∏Ñ‡∏ß‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ï‡πà‡∏≠")
    elif stability_percentage >= 40:
        print("‚ö†Ô∏è ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á - ‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á")
    else:
        print("‚ùå ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£ - ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡πà‡∏≠‡∏ô")

def recommend_testing_duration(pnl, roi):
    """‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö"""
    print("\n‚è∞ ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:")
    print("-" * 50)
    
    if pnl > 0 and roi > 0.5:
        print("‚úÖ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏µ:")
        print("   - ‡∏Å‡∏≥‡πÑ‡∏£: +{:.2f} USDT".format(pnl))
        print("   - ROI: +{:.2f}%".format(roi))
        print()
        print("üéØ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:")
        print("   üìÖ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥: 7-14 ‡∏ß‡∏±‡∏ô")
        print("   üìÖ ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°: 30 ‡∏ß‡∏±‡∏ô")
        print("   üìÖ ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢: 60-90 ‡∏ß‡∏±‡∏ô")
        print()
        print("üí° ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:")
        print("   - ‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏ô‡∏™‡∏†‡∏≤‡∏ß‡∏∞‡∏ï‡∏•‡∏≤‡∏î‡∏ï‡πà‡∏≤‡∏á‡πÜ")
        print("   - ‡∏ï‡πâ‡∏≠‡∏á‡∏ú‡πà‡∏≤‡∏ô Funding Rate ‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≠‡∏ö")
        print("   - ‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Auto Smart Trader")
        print("   - ‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á")
        
    elif pnl > 0:
        print("‚ö†Ô∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á:")
        print("   - ‡∏Å‡∏≥‡πÑ‡∏£: +{:.2f} USDT".format(pnl))
        print("   - ROI: +{:.2f}%".format(roi))
        print()
        print("üéØ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:")
        print("   üìÖ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥: 30 ‡∏ß‡∏±‡∏ô")
        print("   üìÖ ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°: 60 ‡∏ß‡∏±‡∏ô")
        print("   üìÖ ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢: 90-120 ‡∏ß‡∏±‡∏ô")
        print()
        print("üí° ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:")
        print("   - ‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û")
        print("   - ‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏ô‡∏™‡∏†‡∏≤‡∏ß‡∏∞‡∏ï‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢")
        print("   - ‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á")
        
    else:
        print("‚ùå ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏°‡πà‡∏î‡∏µ:")
        print("   - PnL: {:.2f} USDT".format(pnl))
        print("   - ROI: {:.2f}%".format(roi))
        print()
        print("üéØ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:")
        print("   üìÖ ‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡πà‡∏≠‡∏ô: 30-60 ‡∏ß‡∏±‡∏ô")
        print("   üìÖ ‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á: 60-90 ‡∏ß‡∏±‡∏ô")
        print()
        print("üí° ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:")
        print("   - ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î")
        print("   - ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á")
        print("   - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏ô‡∏™‡∏†‡∏≤‡∏ß‡∏∞‡∏ï‡∏•‡∏≤‡∏î‡∏ï‡πà‡∏≤‡∏á‡πÜ")

def recommend_capital_increase(pnl, roi, total_capital):
    """‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô"""
    print("\nüí∞ ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô:")
    print("-" * 50)
    
    if pnl > 0 and roi > 1.0:  # ROI ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1%
        print("üöÄ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°!")
        print("   - ‡∏Å‡∏≥‡πÑ‡∏£: +{:.2f} USDT".format(pnl))
        print("   - ROI: +{:.2f}%".format(roi))
        print()
        print("üíé ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô:")
        print("   üìà ‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö 30 ‡∏ß‡∏±‡∏ô: ‡πÄ‡∏û‡∏¥‡πà‡∏° 50-100%")
        print("   üìà ‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö 60 ‡∏ß‡∏±‡∏ô: ‡πÄ‡∏û‡∏¥‡πà‡∏° 100-200%")
        print("   üìà ‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö 90 ‡∏ß‡∏±‡∏ô: ‡πÄ‡∏û‡∏¥‡πà‡∏° 200-500%")
        print()
        print("üéØ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:")
        current = total_capital
        print(f"   - ‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {current:.2f} USDT")
        print(f"   - ‡πÄ‡∏û‡∏¥‡πà‡∏° 50%: {current * 1.5:.2f} USDT")
        print(f"   - ‡πÄ‡∏û‡∏¥‡πà‡∏° 100%: {current * 2:.2f} USDT")
        print(f"   - ‡πÄ‡∏û‡∏¥‡πà‡∏° 200%: {current * 3:.2f} USDT")
        
    elif pnl > 0 and roi > 0.5:  # ROI ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0.5%
        print("‚úÖ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏µ!")
        print("   - ‡∏Å‡∏≥‡πÑ‡∏£: +{:.2f} USDT".format(pnl))
        print("   - ROI: +{:.2f}%".format(roi))
        print()
        print("üíé ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô:")
        print("   üìà ‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö 60 ‡∏ß‡∏±‡∏ô: ‡πÄ‡∏û‡∏¥‡πà‡∏° 25-50%")
        print("   üìà ‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö 90 ‡∏ß‡∏±‡∏ô: ‡πÄ‡∏û‡∏¥‡πà‡∏° 50-100%")
        print("   üìà ‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö 120 ‡∏ß‡∏±‡∏ô: ‡πÄ‡∏û‡∏¥‡πà‡∏° 100-200%")
        print()
        print("üéØ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:")
        current = total_capital
        print(f"   - ‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {current:.2f} USDT")
        print(f"   - ‡πÄ‡∏û‡∏¥‡πà‡∏° 25%: {current * 1.25:.2f} USDT")
        print(f"   - ‡πÄ‡∏û‡∏¥‡πà‡∏° 50%: {current * 1.5:.2f} USDT")
        print(f"   - ‡πÄ‡∏û‡∏¥‡πà‡∏° 100%: {current * 2:.2f} USDT")
        
    elif pnl > 0:
        print("‚ö†Ô∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á")
        print("   - ‡∏Å‡∏≥‡πÑ‡∏£: +{:.2f} USDT".format(pnl))
        print("   - ROI: +{:.2f}%".format(roi))
        print()
        print("üíé ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô:")
        print("   üìà ‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö 90 ‡∏ß‡∏±‡∏ô: ‡πÄ‡∏û‡∏¥‡πà‡∏° 10-25%")
        print("   üìà ‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö 120 ‡∏ß‡∏±‡∏ô: ‡πÄ‡∏û‡∏¥‡πà‡∏° 25-50%")
        print("   üìà ‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö 180 ‡∏ß‡∏±‡∏ô: ‡πÄ‡∏û‡∏¥‡πà‡∏° 50-100%")
        print()
        print("üéØ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:")
        current = total_capital
        print(f"   - ‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {current:.2f} USDT")
        print(f"   - ‡πÄ‡∏û‡∏¥‡πà‡∏° 10%: {current * 1.1:.2f} USDT")
        print(f"   - ‡πÄ‡∏û‡∏¥‡πà‡∏° 25%: {current * 1.25:.2f} USDT")
        print(f"   - ‡πÄ‡∏û‡∏¥‡πà‡∏° 50%: {current * 1.5:.2f} USDT")
        
    else:
        print("‚ùå ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏°‡πà‡∏î‡∏µ")
        print("   - PnL: {:.2f} USDT".format(pnl))
        print("   - ROI: {:.2f}%".format(roi))
        print()
        print("üíé ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô:")
        print("   üö´ ‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")
        print("   üîß ‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô")
        print("   üìÖ ‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÅ‡∏•‡∏∞‡∏ó‡∏î‡∏™‡∏≠‡∏ö 90 ‡∏ß‡∏±‡∏ô: ‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô")
        print()
        print("üéØ ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:")
        print("   - ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î")
        print("   - ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á")
        print("   - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏ô‡∏™‡∏†‡∏≤‡∏ß‡∏∞‡∏ï‡∏•‡∏≤‡∏î‡∏ï‡πà‡∏≤‡∏á‡πÜ")

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    analyze_testing_results()
    
    print("\n" + "=" * 70)
    print("üéØ ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:")
    print("=" * 70)
    print("üìÖ ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:")
    print("   ‚úÖ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥: 30 ‡∏ß‡∏±‡∏ô")
    print("   ‚úÖ ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°: 60 ‡∏ß‡∏±‡∏ô")
    print("   ‚úÖ ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢: 90 ‡∏ß‡∏±‡∏ô")
    print()
    print("üí∞ ‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:")
    print("   üöÄ ‡∏ú‡∏•‡∏î‡∏µ‡∏°‡∏≤‡∏Å: ‡πÄ‡∏û‡∏¥‡πà‡∏° 50-200%")
    print("   ‚úÖ ‡∏ú‡∏•‡∏î‡∏µ: ‡πÄ‡∏û‡∏¥‡πà‡∏° 25-100%")
    print("   ‚ö†Ô∏è ‡∏ú‡∏•‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á: ‡πÄ‡∏û‡∏¥‡πà‡∏° 10-50%")
    print("   ‚ùå ‡∏ú‡∏•‡πÑ‡∏°‡πà‡∏î‡∏µ: ‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô")
    print()
    print("üéØ ‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô:")
    print("   üìä ROI > 1%: ‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°")
    print("   üìä ROI > 0.5%: ‡∏î‡∏µ")
    print("   üìä ROI > 0%: ‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á")
    print("   üìä ROI < 0%: ‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á")
    print()
    print("‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á:")
    print("   üõ°Ô∏è ‡∏≠‡∏¢‡πà‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ")
    print("   üìà ‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏ô‡∏™‡∏†‡∏≤‡∏ß‡∏∞‡∏ï‡∏•‡∏≤‡∏î‡∏ï‡πà‡∏≤‡∏á‡πÜ")
    print("   üîÑ ‡∏ï‡πâ‡∏≠‡∏á‡∏ú‡πà‡∏≤‡∏ô Funding Rate ‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≠‡∏ö")
    print("   üéØ ‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Auto Smart Trader")

if __name__ == "__main__":
    main()
